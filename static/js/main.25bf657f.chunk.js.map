{"version":3,"sources":["assets/image1.jpeg","assets/image2.jpeg","assets/image3.jpeg","assets/image4.jpeg","assets/image5.jpeg","assets/image6.jpeg","App.js","index.js"],"names":["images","cabbage","mango","fig","gaze","peach","avocado","Loading","calculatedWidth","className","htmlFor","id","max","value","App","useState","currentImage","setCurrentImage","numLoaded","setNumLoaded","handleClick","length","handleImageLoad","type","name","onChange","map","imageURL","index","alt","src","onClick","onLoad","rootElement","document","getElementById","ReactDOM","render"],"mappings":"0JAAe,G,KAAA,IAA0B,qCCA1B,MAA0B,oCCA1B,MAA0B,oCCA1B,MAA0B,oCCA1B,MAA0B,oCCA1B,MAA0B,oC,OCSnCA,EAAS,CAACC,EAASC,EAAOC,EAAKC,EAAMC,EAAOC,GAG5CC,EAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,gBAAH,OACd,gCACE,sBAAKC,UAAU,cAAf,UACE,uBAAOC,QAAQ,gBAAf,iDACA,0BAAUC,GAAG,gBAAgBC,IAAI,MAAMC,MAAOL,UA4ErCM,EApEH,WAEV,MAAwCC,mBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KAEA,EAAkCF,mBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KAEMC,EAAc,WAClB,IAAMC,EAASrB,EAAOqB,OAAS,EAC/BJ,GAAgB,SAACD,GACf,OAAOA,EAAeK,EAASL,EAAe,EAAI,MAWhDM,EAAkB,WACtBH,GAAa,SAACD,GAAD,OAAeA,EAAY,MAU1C,OACE,oCACE,mCACE,uCACA,gDACgB,uBADhB,8BAIA,uBAAOK,KAAK,OAAOC,KAAK,UAAUC,SAbxC,kBAgBI,mCACGP,EAAYlB,EAAOqB,QAClB,cAAC,EAAD,CAASb,gBAAkBU,EAAYlB,EAAOqB,OAAU,MAG1D,uCACGL,EAAe,EADlB,MACwBhB,EAAOqB,UAE9BrB,EAAO0B,KAAI,SAACC,EAAUC,GAAX,OACV,qBAEEC,IAAI,GACJC,IAAKH,EACLI,QAASX,EACTY,OAAQV,EAIRb,UAAWO,IAAiBY,EAAQ,UAAY,QAR3CD,aCvEXM,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAAC,EAAD,MAEFJ,I","file":"static/js/main.25bf657f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/image1.808833ab.jpeg\";","export default __webpack_public_path__ + \"static/media/image2.d6e2aa99.jpeg\";","export default __webpack_public_path__ + \"static/media/image3.68c54325.jpeg\";","export default __webpack_public_path__ + \"static/media/image4.a508b42c.jpeg\";","export default __webpack_public_path__ + \"static/media/image5.b53cf11e.jpeg\";","export default __webpack_public_path__ + \"static/media/image6.03053c00.jpeg\";","import \"./styles.css\";\nimport React, { useState } from \"react\";\nimport cabbage from \"./assets/image1.jpeg\";\nimport mango from \"./assets/image2.jpeg\";\nimport fig from \"./assets/image3.jpeg\";\nimport gaze from \"./assets/image4.jpeg\";\nimport peach from \"./assets/image5.jpeg\";\nimport avocado from \"./assets/image6.jpeg\";\n\nconst images = [cabbage, mango, fig, gaze, peach, avocado];\n\n//notice curly braces because its implicit return\nconst Loading = ({ calculatedWidth }) => (\n  <aside>\n    <div className=\"loading-bar\">\n      <label htmlFor=\"images-loaded\">Loading all your favorite images...</label>\n      <progress id=\"images-loaded\" max=\"100\" value={calculatedWidth}></progress>\n    </div>\n  </aside>\n);\n//ternary statements shorten if and statements...\n//here is an example:\n//1 < 2 ? console.log(\"this is true\") : console.log(\"this is false\")\n\nconst App = () => {\n  //this is called a state hook, you have the array object, and then the function representing the index\n  const [currentImage, setCurrentImage] = useState(0);\n\n  const [numLoaded, setNumLoaded] = useState(0);\n\n  const handleClick = () => {\n    const length = images.length - 1;\n    setCurrentImage((currentImage) => {\n      return currentImage < length ? currentImage + 1 : 0;\n      // if (currentImage < length) {\n      //   //do something here\n      //   return currentImage + 1;\n      // } else {\n      //   // do something else\n      //   return 0;\n      // }\n    });\n  };\n\n  const handleImageLoad = () => {\n    setNumLoaded((numLoaded) => numLoaded + 1);\n  };\n\n  //props are data sent strictly between parent and child\n\n  function handleChange() {\n    //use this to record keyboard inputs\n    // console.log(event.target.value);\n  }\n\n  return (\n    <section>\n      <header>\n        <h1>Zesty</h1>\n        <h2>\n          A photography <br />\n          project by Ella Fielding\n        </h2>\n        <input type=\"text\" name=\"example\" onChange={handleChange} />\n      </header>\n\n      <figure>\n        {numLoaded < images.length && (\n          <Loading calculatedWidth={(numLoaded / images.length) * 100} />\n        )}\n\n        <figcaption>\n          {currentImage + 1} / {images.length}\n        </figcaption>\n        {images.map((imageURL, index) => (\n          <img\n            key={imageURL}\n            alt=\"\"\n            src={imageURL}\n            onClick={handleClick}\n            onLoad={handleImageLoad}\n            //this is essentially an event listener for displaying images\n            // style={{ opacity: currentImage === index ? 1 : 0 }}\n            //you can also do it with css class. below->\n            className={currentImage === index ? \"display\" : \"hide\"}\n          />\n        ))}\n      </figure>\n    </section>\n  );\n};\n\nexport default App;\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}